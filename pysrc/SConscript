# SConscript is python -*-Python-*-

import os
import distutils.sysconfig

Import('env')

pyenv = env.Clone()

# build object files in hidden sub directory
pyenv['OBJPREFIX'] = '.obj/'

# python include path
pyIncDir = distutils.sysconfig.get_python_inc()
pyenv.AppendUnique(CPPPATH=[pyIncDir])
# python lib path
pyLibDir = os.path.split(os.path.split(distutils.sysconfig.get_python_lib())[0])[0]
pyenv.AppendUnique(LIBPATH=[pyLibDir])
# python library
pylib = 'python'+distutils.sysconfig.get_python_version()

# numpy header path
import numpy
npInc = numpy.get_include()
pyenv.AppendUnique(CPPPATH=[npInc])

# bashes C++ library
pyenv.AppendUnique(LIBPATH=['#lib'])

# Hardcode the path to the bashes shared library in our loadable module.
# We probably do not want to do this if we will be copying to an install directory,
# so we are assuming that the module will loaded directly out of the build dir here.
# Note that RPATH is not used to create a LoadableBundle on OS X.
pyenv.AppendUnique(RPATH=[Dir('#lib').abspath])
print 'Using RPATH=',pyenv['RPATH']

# build module
sharedObj = pyenv.SharedObject([
	'module.cc',
	'EstimatorEngine.cc',
	'EstimatorHelpers.cc'
	])

pyenv.Append(LIBS=['boost_python',pylib,'bashes'])

pyenv.LoadableModule(os.path.join('#bashes','_bashes'), sharedObj,
	LDMODULEPREFIX='', LDMODULESUFFIX='.so')
